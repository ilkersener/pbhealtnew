name: Check Domains

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  check_domains:
    runs-on: windows-latest

    steps:
      - name: Depoyu Kopyala
        uses: actions/checkout@v3

      - name: Node.js Kur ve Paketleri Yükle
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Bağımlılıkları Yükle
        run: npm ci

      - name: Testleri Çalıştır ve Logları Kaydet
        run: npx cypress run | tee cypress-output.log
        shell: bash

      - name: Hatalı Domainleri Google Chat'e Gönder (Imgur destekli)
        if: failure()
        env:
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
          GOOGLE_CHAT_WEBHOOK_URL: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
        run: |
          $ErrorActionPreference = "Stop"

          # Log dosyası
          $logPath = "cypress-output.log"
          if (!(Test-Path $logPath)) {
              Write-Host "Log dosyası yok, çıkılıyor."
              exit 0
          }

          $logContent = Get-Content $logPath -Raw
          # ANSI escape kodlarını temizle
          $logContent = $logContent -replace "`e\[[\d;]*m", ""

          # Hataları ayıkla
          $errorMessages = @()
          foreach ($line in $logContent -split "`n") {
              if ($line -match "HATA:") {
                  $errorMessages += $line
              }
          }

          if ($errorMessages.Count -eq 0) {
              Write-Host "Hata bulunamadı, çıkılıyor."
              exit 0
          }

          # Imgur upload için gerekli fonksiyon
          function Upload-ImgurImage($path) {
            $clientId = $env:IMGUR_CLIENT_ID
            $fileBytes = [System.IO.File]::ReadAllBytes($path)
            $base64 = [Convert]::ToBase64String($fileBytes)
            $body = @{ image = $base64 } | ConvertTo-Json

            $headers = @{ Authorization = "Client-ID $clientId" }

            try {
              $response = Invoke-RestMethod -Uri "https://api.imgur.com/3/image" -Method Post -Headers $headers -Body $body -ContentType "application/json"
              return $response.data.link
            } catch {
              Write-Warning "Imgur upload başarısız: $_"
              return $null
            }
          }

          # Screenshot klasörü yolu (Cypress default)
          $screenshotsDir = "cypress/screenshots/failures"

          # Google Chat mesajını oluştur
          $message = "⚠️ **PB Health Check**`n`n🟥 **Hatalı Hesaplar:**`n"

          foreach ($errMsg in $errorMessages) {
            # Hangi domainde hata varsa onu yakalamaya çalışalım
            $urlMatch = $errMsg -match "(https?:\/\/[^\s]+)"
            $url = if ($urlMatch) { $Matches[0] } else { "Bilinmeyen URL" }

            # Dosya adı domain URL'sinden türetildiğini varsayıyoruz (örnek)
            $fileNameBase = ($url -replace 'https?:\/\/|\/', '_').Trim('_').ToLower()

            $screenshotPath = $null
            if (Test-Path $screenshotsDir) {
              $screenshotPath = Get-ChildItem -Path $screenshotsDir -Recurse -Include "*$fileNameBase*.png" | Select-Object -First 1
            }

            if ($null -ne $screenshotPath) {
              $imgurLink = Upload-ImgurImage $screenshotPath.FullName
              if ($imgurLink) {
                $message += "❌ $errMsg`n🔗 $url`n🖼️ Ekran görüntüsü: $imgurLink`n`n"
              } else {
                $message += "❌ $errMsg`n🔗 $url`n"
              }
            } else {
              $message += "❌ $errMsg`n🔗 $url`n"
            }
          }

          # Mesajı gönder
          $body = @{ text = $message } | ConvertTo-Json -Depth 10

          try {
            Invoke-RestMethod -Uri $env:GOOGLE_CHAT_WEBHOOK_URL -Method Post -Body $body -ContentType "application/json"
            Write-Host "Google Chat'e mesaj gönderildi."
          } catch {
            Write-Error "Google Chat mesaj gönderimi başarısız: $_"
            exit 1
          }
        shell: pwsh
