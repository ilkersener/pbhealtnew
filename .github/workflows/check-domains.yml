name: Check Domains

on:
  schedule:
    - cron: "*/1 * * * *"
  workflow_dispatch:

jobs:
  check_domains:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: npm ci

      - name: Cypress testlerini √ßalƒ±≈ütƒ±r
        run: |
          rm -f failures.json
          npx cypress run || true

      - name: Google Chat'e Bildir
        if: always()
        run: |
          mkdir -p screenshots_flat
          if [ -d "cypress/screenshots" ]; then
            find cypress/screenshots -type f -name "*.png" -exec cp {} screenshots_flat/ \;
          fi

          if [ -f failures.json ]; then
            error_block=""

            while IFS= read -r line; do
              url=$(echo "$line" | jq -r '.url')
              img_name=$(echo "$url" | sed 's|https://||; s|/|_|g')
              img_file="screenshots_flat/${img_name}.png"

              if [ -f "$img_file" ]; then
                base64_image=$(base64 "$img_file" | tr -d '\n')
                response=$(curl -s --request POST "https://api.imgur.com/3/image" \
                  --header "Authorization: Client-ID ${{ secrets.IMGUR_CLIENT_ID }}" \
                  --form "image=$base64_image")
                imgur_url=$(echo "$response" | jq -r '.data.link')
              else
                imgur_url="(G√∂rsel bulunamadƒ±)"
              fi

              error_block+="‚ùå Link: $url ‚Üí \nüñºÔ∏è Ekran G√∂r√ºnt√ºs√º: $imgur_url\n\n"
            done < <(jq -c '.[]' failures.json)

            if [ -n "$error_block" ]; then
              msg="‚ö†Ô∏è **PB Saƒülƒ±k Kontrol√º**\n\n**Hatalƒ± Hesaplar:**\n\n$error_block"
              curl -X POST "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" \
                -H "Content-Type: application/json" \
                -d "$(jq -n --arg text "$msg" '{ text: $text }')"
            fi
          fi
