name: Check Domains

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  check_domains:
    runs-on: ubuntu-latest

    steps:
      - name: Kodu Checkout Et
        uses: actions/checkout@v3

      - name: Node Kurulumu
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Paketleri Kur
        run: npm ci

      - name: Cypress Testini Çalıştır
        run: |
          rm -f failures.json
          npx cypress run || true

      - name: Ekran Görüntülerini Topla ve Bildir
        if: always()
        run: |
          mkdir -p screenshots_flat
          find cypress/screenshots -type f -name "*.png" -exec cp {} screenshots_flat/ \;

          msg="⚠️ **Sunucu Sağlık Kontrolü Sonucu**\n\n"
          error_block=""

          if [ -f "failures.json" ]; then
            while IFS= read -r line; do
              url=$(echo "$line" | jq -r '.url')
              message=$(echo "$line" | jq -r '.errorMessage')
              img_name=$(echo "$url" | sed 's|https://||;s|/|_|g')
              img_file="screenshots_flat/${img_name}.png"

              if [ -f "$img_file" ]; then
                base64_image=$(base64 "$img_file" | tr -d '\n')
                response=$(curl -s --request POST "https://api.imgur.com/3/image" \
                  --header "Authorization: Client-ID ${{ secrets.IMGUR_CLIENT_ID }}" \
                  --form "image=$base64_image")
                link=$(echo "$response" | jq -r '.data.link')
              else
                link="(Görsel bulunamadı)"
              fi

              error_block+="❌ HATA: ${message}\n🔗 Link: ${url}\n🖼️ Screenshot: ${link}\n\n"
            done < <(jq -c '.[]' failures.json)
          fi

          if [ -z "$error_block" ]; then
            msg+="✅ Hiçbir hata bulunamadı."
          else
            msg+="**Hatalı Sunucular:**\n\n${error_block}"
          fi

          curl -X POST "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg text "$msg" '{ text: $text }')"
