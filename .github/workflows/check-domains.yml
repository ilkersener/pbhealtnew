name: Check Domains

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  check_domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests and capture logs
        run: npx cypress run | tee cypress-output.log

      - name: Hataları Google Chat'e Gönder (Imgur ile)
        if: always()
        run: |
          if [ ! -f "cypress-output.log" ]; then
            echo "Log dosyası yok, çıkılıyor."
            exit 0
          fi

          message="⚠️ **PB Sağlık Kontrolü**\n\n**Hatalı Hesaplar:**\n\n"
          has_error=false

          while IFS= read -r line; do
            if [[ "$line" == HATA:* ]]; then
              has_error=true
              url=$(echo "$line" | cut -d' ' -f2)
              name=$(echo "$line" | cut -d'|' -f2 | tr -d '| ')

              img_path="cypress/screenshots/${name}.png"

              if [ -f "$img_path" ]; then
                base64_image=$(base64 "$img_path" | tr -d '\n')
                response=$(curl -s --request POST "https://api.imgur.com/3/image" \
                  --header "Authorization: Client-ID ${{ secrets.IMGUR_CLIENT_ID }}" \
                  --form "image=$base64_image")

                imgur_url=$(echo "$response" | jq -r '.data.link // "Görsel yüklenemedi"')
              else
                imgur_url="Ekran görüntüsü bulunamadı"
              fi

              message+="❌ Link: $url\n🖼️ Ekran Görüntüsü: $imgur_url\n\n"
            fi
          done < cypress-output.log

          if [ "$has_error" = true ]; then
            curl -X POST "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -d "$(jq -n --arg text "$message" '{ text: $text }')"
          else
            echo "Hata bulunamadı, mesaj gönderilmiyor."
          fi
        shell: bash
